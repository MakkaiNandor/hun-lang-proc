@page "/wordproc"
@implements IDisposable
@inject NavigationManager NavManager

<h1>Szóelemzés</h1>

<p><i>Morfológiai elemző modul</i></p>

<p class="my-2">A <b>morfológiai elemző</b> modul egy vagy több szót vár bemenetként. Csak azokat a szavakat képes helyesen felbontani, amelyek megfelelnek a helyesírási szabályoknak. Minden szóra elvégzi az elemzést és visszatéríti a lehetséges megoldásokat. A legtöbb esetben egynél több felbontási változatot talál, amelyekből a felhasználó kiválaszthatja a szerinte legmegfelelőbbnek vélt megoldást. Ehhez segítséget nyújt a rendelkezésre álló <span class="clickable"@onclick="RedirectToTheory">elméleti anyag</span>.</p>
<p>A megoldások tartalmazzák a szótövet, valamint az ehhez kapcsolódó toldalékokat, prefixumokat és szuffixumokat. Egy megoldás kiválasztásával további információk jelennek meg a szótőről (szófaj, alakváltozat vagy szótári alak) és a toldalékokról (típus, rövid leírás).</p>

<hr />

<div class="row">
    <label class="col-1 col-form-label font-weight-bold">Bemenet:</label>
    <div class="col-5">
        <input type="text" class="form-control" @bind="Input" @bind:event="oninput" @onkeydown="CheckIfEnterPressed" placeholder="Egy vagy több szó" />
    </div>
    <div class="col-1">
        <button class="btn btn-primary" @onclick="async (e) => await OnAnalyzeClicked()" disabled="@(AnalyzeInProgress || DataIsLoading)">Elemzés</button>
    </div>
    <div class="col-1">
        <button class="btn btn-primary" @onclick="OnResetClicked" disabled="@DataIsLoading">Visszaállít</button>
    </div>
</div>

<div class="text-info font-weight-bold mt-3 pl-3">@InfoMessage</div>

<hr />

<div>
    <p class="mt-2 font-weight-bold">Elemzés eredménye:</p>
</div>

@foreach (var result in Result)
{
    <hr />
    <div class="row">
        <div class="col-2">
            @result.OriginalWord
        </div>
        <div class="col">
            @foreach (var variant in result.Variants)
            {
                <MorphVariant Variant="@variant"/>
            }
        </div>
    </div>
}

<!--<MorphAnalyzerTesting State="@DataIsLoading"/>-->

@code {
    private bool AnalyzeInProgress = false;
    private bool DataIsLoading = false;

    private string Input = "";
    private string State = "";
    private string InfoMessage = "";

    private List<MAResult> Result = new List<MAResult>();
    private MorphologicalAnalyzer Analyzer;

    protected override async Task OnInitializedAsync()
    {
        InfoMessage = "Szükséges adatok betöltése ...";
        DataIsLoading = true;
        await DatabaseInitializer.InitializeAsync();
        DataIsLoading = false;
        Analyzer = new MorphologicalAnalyzer();
        State = "Készen áll az elemzésre!";
        InfoMessage = State;
    }

    public void Dispose()
    {
        DatabaseContext.Dispose();
        Console.WriteLine("(wordproc) Database disposed!");
    }

    private void RedirectToTheory()
    {
        NavManager.NavigateTo("/theory");
    }

    private async Task CheckIfEnterPressed(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await OnAnalyzeClicked();
        }
    }

    private async Task OnAnalyzeClicked()
    {
        if (Input.Length == 0)
        {
            InfoMessage = "Nincs bemenet!";
            return;
        }

        Result = new List<MAResult>();

        InfoMessage = "Az elemzés folyamatban van!";
        await Task.Run(() =>
        {
            AnalyzeInProgress = true;
            Result = Analyzer.AnalyzeText(Input);
            AnalyzeInProgress = false;
        });
        InfoMessage = State;
    }

    private void OnResetClicked()
    {
        Input = "";
        Result = new List<MAResult>();
        AnalyzeInProgress = false;
        InfoMessage = State;
    }
}
